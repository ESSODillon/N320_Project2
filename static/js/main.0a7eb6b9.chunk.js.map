{"version":3,"sources":["components/Card.js","characters/Bachelors.js","characters/Bachelorettes.js","characters/ViewAll.js","components/Menu.js","components/SelectView.js","App.js","index.js"],"names":["Characters","id","num","name","area","image","showInfo","Card","className","CardContent","Typography","sx","fontSize","color","gutterBottom","component","src","CardActions","Button","onClick","background","backgroundColor","variant","size","ViewChar","back","useState","bachelors","setBachelors","showModal","setModalOpen","chars","setChars","selectedChar","selectChar","cardNum","setCardNum","friends","setFriends","family","setFamily","giftLove","setGiftLove","giftHate","setGiftHate","useEffect","window","addEventListener","changeCarousel","fetch","headers","Accept","then","response","json","data","Bachelors","guys","map","guy","key","address","birthday","gifts","image_two","Modal","open","onClose","renderArrow","type","isEdge","pointer","consts","PREV","disabled","itemsToShow","renderPagination","pages","activePage","direction","page","isActivePage","value","active","checked","process","innerWidth","console","log","charID","charKey","join","love","hate","bachelorettes","setBachelorettes","Bachelorettes","gals","gal","myArrow","Menu","viewAll","setButtonWidth","changeButtonWidth","SelectView","setViewAll","view","setView","setMenu","App","StrictMode","rootElement","document","getElementById","ReactDOM","render"],"mappings":"yOAyCeA,MAlCf,YAA+D,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,IAAKC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAChD,OACE,eAACC,EAAA,EAAD,CAAMC,UAAU,OAAhB,UACE,eAACC,EAAA,EAAD,CAAaD,UAAU,eAAvB,UACE,cAACE,EAAA,EAAD,CAAYC,GAAI,CAAEC,SAAU,IAAMC,MAAM,iBAAiBC,cAAY,EAArE,SACGV,IAEH,mBAAGI,UAAU,OAAOO,UAAU,MAA9B,SACGZ,IAEH,qBAAKK,UAAU,SAASQ,IAAKX,OAE/B,cAACY,EAAA,EAAD,CAAaT,UAAU,gBAAvB,SACE,cAACU,EAAA,EAAD,CACEC,QAAS,WACPb,EAASL,EAAIC,IAEfS,GAAI,CACFS,WAAY,UACZ,UAAW,CACTC,gBAAiB,YAGrBC,QAAQ,YACRC,KAAK,QACLf,UAAU,cAZZ,8B,mDCbO,SAASgB,EAAT,GAA6B,IAATC,EAAQ,EAARA,KACjC,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAmCN,mBAAS,IAA5C,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAA8BR,mBAAS,GAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KAEA,EAA8BV,mBAAS,IAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KACA,EAA4BZ,mBAAS,IAArC,mBAAOa,EAAP,KAAeC,EAAf,KACA,EAAgCd,mBAAS,IAAzC,mBAAOe,EAAP,KAAiBC,EAAjB,KACA,EAAgChB,mBAAS,IAAzC,mBAAOiB,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACRC,OAAOC,iBAAiB,OAAQC,GAChCF,OAAOC,iBAAiB,SAAUC,GAElCC,MAAM,uBAAwB,CAC5BC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAGTC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLvB,EAASuB,GACT3B,EAAa2B,EAAK,GAAGC,WACrBR,SAEH,IAEH,IAAMS,EAAO9B,EAAU+B,KAAI,SAACC,EAAKC,GAAN,OACzB,cAAC,EAAD,CACE1D,IAAKyD,EAAIzD,IACTD,GAAI0D,EAAI1D,GACRE,KAAMwD,EAAIxD,KACVC,KAAMuD,EAAIvD,KACVyD,QAASF,EAAIE,QACbC,SAAUH,EAAIG,SACdvB,OAAQoB,EAAIpB,OACZF,QAASsB,EAAItB,QACb0B,MAAOJ,EAAII,MACX1D,MAAOsD,EAAItD,MACX2D,UAAWL,EAAIK,UACf1D,SAAUA,OAId,OACE,sBAAKE,UAAU,UAAf,UACE,cAACyD,EAAA,EAAD,CACEC,KAAMrC,EACNsC,QAAS,WACPrC,GAAa,IAHjB,SAME,sBAAKtB,UAAU,UAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,UAAf,UACE,oBAAGA,UAAU,aAAb,sBACY,IACV,sBAAMA,UAAU,eAAhB,SAAgCyB,EAAa6B,cAE/C,oBAAGtD,UAAU,aAAb,mBACQ,sBAAMA,UAAU,eAAhB,SAAgCyB,EAAa7B,UAErD,oBAAGI,UAAU,aAAb,qBACW,IACT,sBAAMA,UAAU,eAAhB,SAAgCyB,EAAa4B,aAE/C,oBAAGrD,UAAU,aAAb,qBACU,sBAAMA,UAAU,eAAhB,SAAgC+B,UAI5C,sBAAK/B,UAAU,UAAf,UACE,oBAAGA,UAAU,aAAb,sBACW,sBAAMA,UAAU,eAAhB,SAAgC6B,OAE3C,oBAAG7B,UAAU,aAAb,wBACcyB,EAAa9B,KAD3B,UACwC,IACtC,sBAAMK,UAAU,eAAhB,SAAgCiC,OAElC,oBAAGjC,UAAU,aAAb,wBACcyB,EAAa9B,KAD3B,UACwC,IACtC,sBAAMK,UAAU,eAAhB,SAAgCmC,aAKtC,sBAAKnC,UAAU,gBAAf,UACE,qBAAKQ,IAAKiB,EAAa+B,YACvB,6BAAK/B,EAAa9B,eAKxB,uBACA,uBAEA,eAAC,IAAD,CACEiE,YAsEN,YAA6C,IAA1BC,EAAyB,EAAzBA,KAAMlD,EAAmB,EAAnBA,QAASmD,EAAU,EAAVA,OAC1BC,EACJF,IAASG,IAAOC,KACd,cAAC,IAAD,CAAqBjE,UAAU,UAE/B,cAAC,IAAD,CAAqBA,UAAU,UAEnC,OACE,sBAAMA,UAAU,YAAYW,QAASA,EAASuD,SAAUJ,EAAxD,SACGC,KA9ED/D,UAAU,WACVmE,YAAaxC,EACbyC,iBAAkB,YAAqC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,WAAY3D,EAAc,EAAdA,QACtC,OACE,qBAAK4D,UAAU,MAAf,SACGF,EAAMnB,KAAI,SAACsB,GACV,IAAMC,EAAeH,IAAeE,EACpC,OACE,uBAEEX,KAAK,QACLlE,KAAK,aACL+E,MAAOF,EACP7D,QAAS,kBAAMA,EAAQ6D,IACvBG,OAAQF,EACRG,QAASH,GANJD,SAXnB,UAyBE,8BAAMvB,EAAK,KACX,8BAAMA,EAAK,KACX,8BAAMA,EAAK,KACX,8BAAMA,EAAK,KACX,8BAAMA,EAAK,KACX,8BAAMA,EAAK,QAGb,qBACEjD,UAAU,cACVQ,IAAKqE,sCACLlE,QAASM,OAKf,SAASuB,IACHF,OAAOwC,WAAa,OACtBC,QAAQC,IAAI,SACZpD,EAAW,IAGTU,OAAOwC,WAAa,MACtBlD,EAAW,GAGTU,OAAOwC,WAAa,KACtBlD,EAAW,GAIf,SAAS9B,EAASmF,EAAQC,GAIpBD,EAAS,IACXvD,EAAWH,EAAM,GAAGyB,UAAUkC,IAC9BpD,EAAWP,EAAM,GAAGyB,UAAUkC,GAASrD,QAAQsD,KAAK,MACpDnD,EAAUT,EAAM,GAAGyB,UAAUkC,GAASnD,OAAOoD,KAAK,MAClDjD,EAAYX,EAAM,GAAGyB,UAAUkC,GAAS3B,MAAM6B,KAAKD,KAAK,OACxD/C,EAAYb,EAAM,GAAGyB,UAAUkC,GAAS3B,MAAM8B,KAAKF,KAAK,QAG1D7D,GAAa,ICvKF,SAASN,EAAT,GAA6B,IAATC,EAAQ,EAARA,KACjC,EAA0CC,mBAAS,IAAnD,mBAAOoE,EAAP,KAAsBC,EAAtB,KACA,EAAkCrE,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAmCN,mBAAS,IAA5C,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAA8BR,mBAAS,GAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KAEA,EAA8BV,mBAAS,IAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KACA,EAA4BZ,mBAAS,IAArC,mBAAOa,EAAP,KAAeC,EAAf,KACA,EAAgCd,mBAAS,IAAzC,mBAAOe,EAAP,KAAiBC,EAAjB,KACA,EAAgChB,mBAAS,IAAzC,mBAAOiB,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACRC,OAAOC,iBAAiB,OAAQC,GAChCF,OAAOC,iBAAiB,SAAUC,GAElCC,MAAM,uBAAwB,CAC5BC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAGTC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLvB,EAASuB,GACTwC,EAAiBxC,EAAK,GAAGyC,eACzBhD,SAEH,IAEH,IAAMiD,EAAOH,EAAcpC,KAAI,SAACwC,EAAKtC,GAAN,OAC7B,cAAC,EAAD,CACE1D,IAAKgG,EAAIhG,IACTD,GAAIiG,EAAIjG,GACRE,KAAM+F,EAAI/F,KACVC,KAAM8F,EAAI9F,KACVyD,QAASqC,EAAIrC,QACbC,SAAUoC,EAAIpC,SACdvB,OAAQ2D,EAAI3D,OACZF,QAAS6D,EAAI7D,QACb0B,MAAOmC,EAAInC,MACX1D,MAAO6F,EAAI7F,MACX2D,UAAWkC,EAAIlC,UACf1D,SAAUA,OAId,OACE,sBAAKE,UAAU,UAAf,UACE,cAACyD,EAAA,EAAD,CACEC,KAAMrC,EACNsC,QAAS,WACPrC,GAAa,IAHjB,SAME,sBAAKtB,UAAU,UAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,UAAf,UACE,oBAAGA,UAAU,aAAb,sBACY,IACV,sBAAMA,UAAU,eAAhB,SAAgCyB,EAAa6B,cAE/C,oBAAGtD,UAAU,aAAb,mBACQ,sBAAMA,UAAU,eAAhB,SAAgCyB,EAAa7B,UAErD,oBAAGI,UAAU,aAAb,qBACW,IACT,sBAAMA,UAAU,eAAhB,SAAgCyB,EAAa4B,aAE/C,oBAAGrD,UAAU,aAAb,qBACU,sBAAMA,UAAU,eAAhB,SAAgC+B,UAI5C,sBAAK/B,UAAU,UAAf,UACE,oBAAGA,UAAU,aAAb,sBACW,sBAAMA,UAAU,eAAhB,SAAgC6B,OAE3C,oBAAG7B,UAAU,aAAb,wBACcyB,EAAa9B,KAD3B,UACwC,IACtC,sBAAMK,UAAU,eAAhB,SAAgCiC,OAElC,oBAAGjC,UAAU,aAAb,wBACcyB,EAAa9B,KAD3B,UACwC,IACtC,sBAAMK,UAAU,eAAhB,SAAgCmC,aAKtC,sBAAKnC,UAAU,gBAAf,UACE,qBAAKQ,IAAKiB,EAAa+B,YACvB,6BAAK/B,EAAa9B,eAKxB,eAAC,IAAD,CACEiE,YAyEN,YAA6C,IAA1BC,EAAyB,EAAzBA,KAAMlD,EAAmB,EAAnBA,QAASmD,EAAU,EAAVA,OAC1BC,EACJF,IAASG,IAAOC,KACd,cAAC,IAAD,CAAqBjE,UAAU,UAE/B,cAAC,IAAD,CAAqBA,UAAU,UAEnC,OACE,sBAAMA,UAAU,YAAYW,QAASA,EAASuD,SAAUJ,EAAxD,SACGC,KAjFD/D,UAAU,WACVmE,YAAaxC,EACbyC,iBAAkB,YAAqC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,WAAY3D,EAAc,EAAdA,QACtC,OACE,qBAAK4D,UAAU,MAAf,SACGF,EAAMnB,KAAI,SAACsB,GACV,IAAMC,EAAeH,IAAeE,EACpC,OACE,uBAEEX,KAAK,QACLlE,KAAK,QACL+E,MAAOF,EACP7D,QAAS,kBAAMA,EAAQ6D,IACvBG,OAAQF,EACRG,QAASH,GANJD,SAXnB,UAyBE,8BAAMiB,EAAK,KACX,8BAAMA,EAAK,KACX,8BAAMA,EAAK,KACX,8BAAMA,EAAK,KACX,8BAAMA,EAAK,KACX,8BAAMA,EAAK,QAGb,uBACA,uBAEA,qBACEzF,UAAU,cACVQ,IAAKqE,sCACLlE,QAASM,OAKf,SAASuB,IACHF,OAAOwC,WAAa,OACtBC,QAAQC,IAAI,SACZpD,EAAW,IAGTU,OAAOwC,WAAa,MACtBlD,EAAW,GAGTU,OAAOwC,WAAa,KACtBlD,EAAW,GAIf,SAAS9B,EAASmF,EAAQC,GAIpBD,EAAS,IACXvD,EAAWH,EAAM,GAAGiE,cAAcN,IAClCpD,EAAWP,EAAM,GAAGiE,cAAcN,GAASrD,QAAQsD,KAAK,OACxDnD,EAAUT,EAAM,GAAGiE,cAAcN,GAASnD,OAAOoD,KAAK,OACtDjD,EAAYX,EAAM,GAAGiE,cAAcN,GAAS3B,MAAM6B,KAAKD,KAAK,OAC5D/C,EAAYb,EAAM,GAAGiE,cAAcN,GAAS3B,MAAM8B,KAAKF,KAAK,QAG9D7D,GAAa,ICvKF,SAASN,EAAT,GAA6B,IAATC,EAAQ,EAARA,KACjC,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0CF,mBAAS,IAAnD,mBAAOoE,EAAP,KAAsBC,EAAtB,KACA,EAAkCrE,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAmCN,mBAAS,IAA5C,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAA8BR,mBAAS,GAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KAEA,EAA8BV,mBAAS,IAAvC,mBAAOW,EAAP,KAAgBC,EAAhB,KACA,EAA4BZ,mBAAS,IAArC,mBAAOa,EAAP,KAAeC,EAAf,KACA,EAAgCd,mBAAS,IAAzC,mBAAOe,EAAP,KAAiBC,EAAjB,KACA,EAAgChB,mBAAS,IAAzC,mBAAOiB,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACRC,OAAOC,iBAAiB,OAAQC,GAChCF,OAAOC,iBAAiB,SAAUC,GAElCC,MAAM,uBAAwB,CAC5BC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAGTC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLvB,EAASuB,GACTwC,EAAiBxC,EAAK,GAAGyC,eACzBpE,EAAa2B,EAAK,GAAGC,WACrBR,SAEH,IAEH,IAAMS,EAAO9B,EAAU+B,KAAI,SAACC,EAAKC,GAAN,OACzB,cAAC,EAAD,CACE1D,IAAKyD,EAAIzD,IACTD,GAAI0D,EAAI1D,GACRE,KAAMwD,EAAIxD,KACVC,KAAMuD,EAAIvD,KACVyD,QAASF,EAAIE,QACbC,SAAUH,EAAIG,SACdvB,OAAQoB,EAAIpB,OACZF,QAASsB,EAAItB,QACb0B,MAAOJ,EAAII,MACX1D,MAAOsD,EAAItD,MACX2D,UAAWL,EAAIK,UACf1D,SAAUA,OAIR2F,EAAOH,EAAcpC,KAAI,SAACwC,EAAKtC,GAAN,OAC7B,cAAC,EAAD,CACE1D,IAAKgG,EAAIhG,IACTD,GAAIiG,EAAIjG,GACRE,KAAM+F,EAAI/F,KACVC,KAAM8F,EAAI9F,KACVyD,QAASqC,EAAIrC,QACbC,SAAUoC,EAAIpC,SACdvB,OAAQ2D,EAAI3D,OACZF,QAAS6D,EAAI7D,QACb0B,MAAOmC,EAAInC,MACX1D,MAAO6F,EAAI7F,MACX2D,UAAWkC,EAAIlC,UACf1D,SAAUA,OAId,OACE,sBAAKE,UAAU,UAAf,UACE,cAACyD,EAAA,EAAD,CACEC,KAAMrC,EACNsC,QAAS,WACPrC,GAAa,IAHjB,SAME,sBAAKtB,UAAU,UAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,UAAf,UACE,oBAAGA,UAAU,aAAb,sBACY,IACV,sBAAMA,UAAU,eAAhB,SAAgCyB,EAAa6B,cAE/C,oBAAGtD,UAAU,aAAb,mBACQ,sBAAMA,UAAU,eAAhB,SAAgCyB,EAAa7B,UAErD,oBAAGI,UAAU,aAAb,qBACW,IACT,sBAAMA,UAAU,eAAhB,SAAgCyB,EAAa4B,aAE/C,oBAAGrD,UAAU,aAAb,qBACU,sBAAMA,UAAU,eAAhB,SAAgC+B,UAI5C,sBAAK/B,UAAU,UAAf,UACE,oBAAGA,UAAU,aAAb,sBACW,sBAAMA,UAAU,eAAhB,SAAgC6B,OAE3C,oBAAG7B,UAAU,aAAb,wBACcyB,EAAa9B,KAD3B,UACwC,IACtC,sBAAMK,UAAU,eAAhB,SAAgCiC,OAElC,oBAAGjC,UAAU,aAAb,wBACcyB,EAAa9B,KAD3B,UACwC,IACtC,sBAAMK,UAAU,eAAhB,SAAgCmC,aAKtC,sBAAKnC,UAAU,gBAAf,UACE,qBAAKQ,IAAKiB,EAAa+B,YACvB,6BAAK/B,EAAa9B,eAKxB,eAAC,IAAD,CACEiE,YAAa+B,GACb3F,UAAU,WACVmE,YAAaxC,EACbyC,iBAAkB,YAAqC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,WAAY3D,EAAc,EAAdA,QACtC,OACE,qBAAK4D,UAAU,MAAf,SACGF,EAAMnB,KAAI,SAACsB,GACV,IAAMC,EAAeH,IAAeE,EACpC,OACE,uBAEEX,KAAK,QACLlE,KAAK,QACL+E,MAAOF,EACP7D,QAAS,kBAAMA,EAAQ6D,IACvBG,OAAQF,EACRG,QAASH,GANJD,SAXnB,UAyBE,8BAAMiB,EAAK,KACX,8BAAMA,EAAK,KACX,8BAAMA,EAAK,KACX,8BAAMA,EAAK,KACX,8BAAMA,EAAK,KACX,8BAAMA,EAAK,QAGb,uBACA,uBAEA,eAAC,IAAD,CACE7B,YAAa+B,GACb3F,UAAU,WACVmE,YAAaxC,EACbyC,iBAAkB,YAAqC,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,WAAY3D,EAAc,EAAdA,QACtC,OACE,qBAAK4D,UAAU,MAAf,SACGF,EAAMnB,KAAI,SAACsB,GACV,IAAMC,EAAeH,IAAeE,EACpC,OACE,uBAEEX,KAAK,QACLlE,KAAK,aACL+E,MAAOF,EACP7D,QAAS,kBAAMA,EAAQ6D,IACvBG,OAAQF,EACRG,QAASH,GANJD,SAXnB,UAyBE,8BAAMvB,EAAK,KACX,8BAAMA,EAAK,KACX,8BAAMA,EAAK,KACX,8BAAMA,EAAK,KACX,8BAAMA,EAAK,KACX,8BAAMA,EAAK,QAGb,qBACEjD,UAAU,cACVQ,IAAKqE,sCACLlE,QAASM,OAKf,SAASuB,IACHF,OAAOwC,WAAa,OACtBC,QAAQC,IAAI,SACZpD,EAAW,IAGTU,OAAOwC,WAAa,MACtBlD,EAAW,GAGTU,OAAOwC,WAAa,KACtBlD,EAAW,GAIf,SAAS9B,EAASmF,EAAQC,GAIpBD,EAAS,IACXvD,EAAWH,EAAM,GAAGiE,cAAcN,IAClCpD,EAAWP,EAAM,GAAGiE,cAAcN,GAASrD,QAAQsD,KAAK,OACxDnD,EAAUT,EAAM,GAAGiE,cAAcN,GAASnD,OAAOoD,KAAK,OACtDjD,EAAYX,EAAM,GAAGiE,cAAcN,GAAS3B,MAAM6B,KAAKD,KAAK,OAC5D/C,EAAYb,EAAM,GAAGiE,cAAcN,GAAS3B,MAAM8B,KAAKF,KAAK,QAI1DF,EAAS,IACXvD,EAAWH,EAAM,GAAGyB,UAAUkC,IAC9BpD,EAAWP,EAAM,GAAGyB,UAAUkC,GAASrD,QAAQsD,KAAK,MACpDnD,EAAUT,EAAM,GAAGyB,UAAUkC,GAASnD,OAAOoD,KAAK,MAClDjD,EAAYX,EAAM,GAAGyB,UAAUkC,GAAS3B,MAAM6B,KAAKD,KAAK,OACxD/C,EAAYb,EAAM,GAAGyB,UAAUkC,GAAS3B,MAAM8B,KAAKF,KAAK,QAG1D7D,GAAa,GAGf,SAASqE,GAAT,GAA6C,IAA1B9B,EAAyB,EAAzBA,KAAMlD,EAAmB,EAAnBA,QAASmD,EAAU,EAAVA,OAC1BC,EACJF,IAASG,IAAOC,KACd,cAAC,IAAD,CAAqBjE,UAAU,UAE/B,cAAC,IAAD,CAAqBA,UAAU,UAEnC,OACE,sBAAMA,UAAU,YAAYW,QAASA,EAASuD,SAAUJ,EAAxD,SACGC,KC9OM,SAAS6B,EAAT,GAAsD,IAAtCzE,EAAqC,EAArCA,UAAWmE,EAA0B,EAA1BA,cAAeO,EAAW,EAAXA,QACvD,EAAsC3E,mBAAS,OAA/C,mBAAoB4E,GAApB,WAKA,OAHAxD,OAAOC,iBAAiB,OAAQwD,GAChCzD,OAAOC,iBAAiB,SAAUwD,GAGhC,qBAAK/F,UAAU,UAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBACEA,UAAU,cACVQ,IAAKqE,sCACLlE,QAASQ,IAEX,qBACEnB,UAAU,cACVQ,IAAKqE,sCACLlE,QAAS2E,IAEX,qBACEtF,UAAU,cACVQ,IAAKqE,yCACLlE,QAASkF,SAMjB,SAASE,IACHzD,OAAOwC,WAAa,MACtBgB,EAAe,OAGbxD,OAAOwC,WAAa,MACtBgB,EAAe,QC/BN,SAASE,IACtB,MAAwB9E,mBACtB,cAAC0E,EAAD,CACEzE,UAAWC,EACXkE,cAAeC,EACfM,QAASI,KAJb,mBAAOC,EAAP,KAAaC,EAAb,KAQA,OAAO,qBAAKnG,UAAU,UAAf,SAA0BkG,IAEjC,SAAS9E,IACP+E,EAAQ,cAAC,EAAD,CAAWlF,KAAMmF,KAG3B,SAASb,IACPY,EAAQ,cAAC,EAAD,CAAelF,KAAMmF,KAG/B,SAASH,IACPE,EAAQ,cAAC,EAAD,CAASlF,KAAMmF,KAGzB,SAASA,IACPD,EACE,cAACP,EAAD,CACEzE,UAAWC,EACXkE,cAAeC,EACfM,QAASI,MCpCF,SAASI,IACtB,OACE,sBAAKrG,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,qBACEA,UAAU,YACVQ,IAAKqE,+CAGT,cAAC,IAAMyB,WAAP,UACE,cAACN,EAAD,SCTR,IAAMO,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACN,EAAD,MAEFE,K","file":"static/js/main.0a7eb6b9.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\n\nfunction Characters({ id, num, name, area, image, showInfo }) {\n  return (\n    <Card className=\"card\">\n      <CardContent className=\"card_content\">\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          {area}\n        </Typography>\n        <p className=\"name\" component=\"div\">\n          {name}\n        </p>\n        <img className=\"avatar\" src={image}></img>\n      </CardContent>\n      <CardActions className=\"button_holder\">\n        <Button\n          onClick={() => {\n            showInfo(id, num);\n          }}\n          sx={{\n            background: \"#904c33\",\n            \"&:hover\": {\n              backgroundColor: \"#6e2f18\",\n            },\n          }}\n          variant=\"contained\"\n          size=\"small\"\n          className=\"card_button\"\n        >\n          Learn More\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default Characters;\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"../components/Card\";\nimport Modal from \"@mui/material/Modal\";\nimport Carousel, { consts } from \"react-elastic-carousel\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\n\nexport default function ViewChar({ back }) {\n  const [bachelors, setBachelors] = useState([]);\n  const [showModal, setModalOpen] = useState(false);\n  const [chars, setChars] = useState([]);\n  const [selectedChar, selectChar] = useState({});\n  const [cardNum, setCardNum] = useState(3);\n\n  const [friends, setFriends] = useState({});\n  const [family, setFamily] = useState({});\n  const [giftLove, setGiftLove] = useState({});\n  const [giftHate, setGiftHate] = useState({});\n\n  useEffect(() => {\n    window.addEventListener(\"load\", changeCarousel);\n    window.addEventListener(\"resize\", changeCarousel);\n\n    fetch(\"data/characters.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setChars(data);\n        setBachelors(data[1].Bachelors);\n        changeCarousel();\n      });\n  }, []);\n\n  const guys = bachelors.map((guy, key) => (\n    <Card\n      num={guy.num}\n      id={guy.id}\n      name={guy.name}\n      area={guy.area}\n      address={guy.address}\n      birthday={guy.birthday}\n      family={guy.family}\n      friends={guy.friends}\n      gifts={guy.gifts}\n      image={guy.image}\n      image_two={guy.image_two}\n      showInfo={showInfo}\n    />\n  ));\n\n  return (\n    <div className=\"content\">\n      <Modal\n        open={showModal}\n        onClose={() => {\n          setModalOpen(false);\n        }}\n      >\n        <div className=\"infoBox\">\n          <div className=\"infoBox_left\">\n            <div className=\"column1\">\n              <p className=\"modal_info\">\n                Birthday:{\" \"}\n                <span className=\"modal_info_2\">{selectedChar.birthday}</span>\n              </p>\n              <p className=\"modal_info\">\n                Area: <span className=\"modal_info_2\">{selectedChar.area}</span>\n              </p>\n              <p className=\"modal_info\">\n                Address:{\" \"}\n                <span className=\"modal_info_2\">{selectedChar.address}</span>\n              </p>\n              <p className=\"modal_info\">\n                Family: <span className=\"modal_info_2\">{family}</span>\n              </p>\n            </div>\n\n            <div className=\"column2\">\n              <p className=\"modal_info\">\n                Friends: <span className=\"modal_info_2\">{friends}</span>\n              </p>\n              <p className=\"modal_info\">\n                Gifts that {selectedChar.name} loves:{\" \"}\n                <span className=\"modal_info_2\">{giftLove}</span>\n              </p>\n              <p className=\"modal_info\">\n                Gifts that {selectedChar.name} hates:{\" \"}\n                <span className=\"modal_info_2\">{giftHate}</span>\n              </p>\n            </div>\n          </div>\n\n          <div className=\"infoBox_right\">\n            <img src={selectedChar.image_two}></img>\n            <h1>{selectedChar.name}</h1>\n          </div>\n        </div>\n      </Modal>\n\n      <br />\n      <br />\n\n      <Carousel\n        renderArrow={myArrow}\n        className=\"carousel\"\n        itemsToShow={cardNum}\n        renderPagination={({ pages, activePage, onClick }) => {\n          return (\n            <div direction=\"row\">\n              {pages.map((page) => {\n                const isActivePage = activePage === page;\n                return (\n                  <input\n                    key={page}\n                    type=\"radio\"\n                    name=\"radio_set2\"\n                    value={page}\n                    onClick={() => onClick(page)}\n                    active={isActivePage}\n                    checked={isActivePage}\n                  />\n                );\n              })}\n            </div>\n          );\n        }}\n      >\n        <div>{guys[0]}</div>\n        <div>{guys[1]}</div>\n        <div>{guys[2]}</div>\n        <div>{guys[3]}</div>\n        <div>{guys[4]}</div>\n        <div>{guys[5]}</div>\n      </Carousel>\n\n      <img\n        className=\"back_button\"\n        src={process.env.PUBLIC_URL + \"/data/img/back.png\"}\n        onClick={back}\n      />\n    </div>\n  );\n\n  function changeCarousel() {\n    if (window.innerWidth > 1050) {\n      console.log(\"Hello\");\n      setCardNum(3);\n    }\n\n    if (window.innerWidth < 1050) {\n      setCardNum(2);\n    }\n\n    if (window.innerWidth < 750) {\n      setCardNum(1);\n    }\n  }\n\n  function showInfo(charID, charKey) {\n    // if the selected character ID is greater than 5, select the bachelors.\n\n    // Bachelors\n    if (charID > 5) {\n      selectChar(chars[1].Bachelors[charKey]);\n      setFriends(chars[1].Bachelors[charKey].friends.join(\" \"));\n      setFamily(chars[1].Bachelors[charKey].family.join(\" \"));\n      setGiftLove(chars[1].Bachelors[charKey].gifts.love.join(\", \"));\n      setGiftHate(chars[1].Bachelors[charKey].gifts.hate.join(\", \"));\n    }\n\n    setModalOpen(true);\n  }\n\n  function myArrow({ type, onClick, isEdge }) {\n    const pointer =\n      type === consts.PREV ? (\n        <ArrowBackIosNewIcon className=\"arrow\" />\n      ) : (\n        <ArrowForwardIosIcon className=\"arrow\" />\n      );\n    return (\n      <span className=\"arrow_box\" onClick={onClick} disabled={isEdge}>\n        {pointer}\n      </span>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"../components/Card\";\nimport Modal from \"@mui/material/Modal\";\nimport Carousel, { consts } from \"react-elastic-carousel\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\n\nexport default function ViewChar({ back }) {\n  const [bachelorettes, setBachelorettes] = useState([]);\n  const [showModal, setModalOpen] = useState(false);\n  const [chars, setChars] = useState([]);\n  const [selectedChar, selectChar] = useState({});\n  const [cardNum, setCardNum] = useState(3);\n\n  const [friends, setFriends] = useState({});\n  const [family, setFamily] = useState({});\n  const [giftLove, setGiftLove] = useState({});\n  const [giftHate, setGiftHate] = useState({});\n\n  useEffect(() => {\n    window.addEventListener(\"load\", changeCarousel);\n    window.addEventListener(\"resize\", changeCarousel);\n\n    fetch(\"data/characters.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setChars(data);\n        setBachelorettes(data[0].Bachelorettes);\n        changeCarousel();\n      });\n  }, []);\n\n  const gals = bachelorettes.map((gal, key) => (\n    <Card\n      num={gal.num}\n      id={gal.id}\n      name={gal.name}\n      area={gal.area}\n      address={gal.address}\n      birthday={gal.birthday}\n      family={gal.family}\n      friends={gal.friends}\n      gifts={gal.gifts}\n      image={gal.image}\n      image_two={gal.image_two}\n      showInfo={showInfo}\n    />\n  ));\n\n  return (\n    <div className=\"content\">\n      <Modal\n        open={showModal}\n        onClose={() => {\n          setModalOpen(false);\n        }}\n      >\n        <div className=\"infoBox\">\n          <div className=\"infoBox_left\">\n            <div className=\"column1\">\n              <p className=\"modal_info\">\n                Birthday:{\" \"}\n                <span className=\"modal_info_2\">{selectedChar.birthday}</span>\n              </p>\n              <p className=\"modal_info\">\n                Area: <span className=\"modal_info_2\">{selectedChar.area}</span>\n              </p>\n              <p className=\"modal_info\">\n                Address:{\" \"}\n                <span className=\"modal_info_2\">{selectedChar.address}</span>\n              </p>\n              <p className=\"modal_info\">\n                Family: <span className=\"modal_info_2\">{family}</span>\n              </p>\n            </div>\n\n            <div className=\"column2\">\n              <p className=\"modal_info\">\n                Friends: <span className=\"modal_info_2\">{friends}</span>\n              </p>\n              <p className=\"modal_info\">\n                Gifts that {selectedChar.name} loves:{\" \"}\n                <span className=\"modal_info_2\">{giftLove}</span>\n              </p>\n              <p className=\"modal_info\">\n                Gifts that {selectedChar.name} hates:{\" \"}\n                <span className=\"modal_info_2\">{giftHate}</span>\n              </p>\n            </div>\n          </div>\n\n          <div className=\"infoBox_right\">\n            <img src={selectedChar.image_two}></img>\n            <h1>{selectedChar.name}</h1>\n          </div>\n        </div>\n      </Modal>\n\n      <Carousel\n        renderArrow={myArrow}\n        className=\"carousel\"\n        itemsToShow={cardNum}\n        renderPagination={({ pages, activePage, onClick }) => {\n          return (\n            <div direction=\"row\">\n              {pages.map((page) => {\n                const isActivePage = activePage === page;\n                return (\n                  <input\n                    key={page}\n                    type=\"radio\"\n                    name=\"radio\"\n                    value={page}\n                    onClick={() => onClick(page)}\n                    active={isActivePage}\n                    checked={isActivePage}\n                  />\n                );\n              })}\n            </div>\n          );\n        }}\n      >\n        <div>{gals[0]}</div>\n        <div>{gals[1]}</div>\n        <div>{gals[2]}</div>\n        <div>{gals[3]}</div>\n        <div>{gals[4]}</div>\n        <div>{gals[5]}</div>\n      </Carousel>\n\n      <br />\n      <br />\n\n      <img\n        className=\"back_button\"\n        src={process.env.PUBLIC_URL + \"/data/img/back.png\"}\n        onClick={back}\n      />\n    </div>\n  );\n\n  function changeCarousel() {\n    if (window.innerWidth > 1050) {\n      console.log(\"Hello\");\n      setCardNum(3);\n    }\n\n    if (window.innerWidth < 1050) {\n      setCardNum(2);\n    }\n\n    if (window.innerWidth < 750) {\n      setCardNum(1);\n    }\n  }\n\n  function showInfo(charID, charKey) {\n    // If the selected character ID is less than 6, select the bachelorettes.\n\n    // Bachelorettes\n    if (charID < 6) {\n      selectChar(chars[0].Bachelorettes[charKey]);\n      setFriends(chars[0].Bachelorettes[charKey].friends.join(\", \"));\n      setFamily(chars[0].Bachelorettes[charKey].family.join(\", \"));\n      setGiftLove(chars[0].Bachelorettes[charKey].gifts.love.join(\", \"));\n      setGiftHate(chars[0].Bachelorettes[charKey].gifts.hate.join(\", \"));\n    }\n\n    setModalOpen(true);\n  }\n\n  function myArrow({ type, onClick, isEdge }) {\n    const pointer =\n      type === consts.PREV ? (\n        <ArrowBackIosNewIcon className=\"arrow\" />\n      ) : (\n        <ArrowForwardIosIcon className=\"arrow\" />\n      );\n    return (\n      <span className=\"arrow_box\" onClick={onClick} disabled={isEdge}>\n        {pointer}\n      </span>\n    );\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport Card from \"../components/Card\";\nimport Modal from \"@mui/material/Modal\";\nimport Carousel, { consts } from \"react-elastic-carousel\";\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\n\nexport default function ViewChar({ back }) {\n  const [bachelors, setBachelors] = useState([]);\n  const [bachelorettes, setBachelorettes] = useState([]);\n  const [showModal, setModalOpen] = useState(false);\n  const [chars, setChars] = useState([]);\n  const [selectedChar, selectChar] = useState({});\n  const [cardNum, setCardNum] = useState(3);\n\n  const [friends, setFriends] = useState({});\n  const [family, setFamily] = useState({});\n  const [giftLove, setGiftLove] = useState({});\n  const [giftHate, setGiftHate] = useState({});\n\n  useEffect(() => {\n    window.addEventListener(\"load\", changeCarousel);\n    window.addEventListener(\"resize\", changeCarousel);\n\n    fetch(\"data/characters.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setChars(data);\n        setBachelorettes(data[0].Bachelorettes);\n        setBachelors(data[1].Bachelors);\n        changeCarousel();\n      });\n  }, []);\n\n  const guys = bachelors.map((guy, key) => (\n    <Card\n      num={guy.num}\n      id={guy.id}\n      name={guy.name}\n      area={guy.area}\n      address={guy.address}\n      birthday={guy.birthday}\n      family={guy.family}\n      friends={guy.friends}\n      gifts={guy.gifts}\n      image={guy.image}\n      image_two={guy.image_two}\n      showInfo={showInfo}\n    />\n  ));\n\n  const gals = bachelorettes.map((gal, key) => (\n    <Card\n      num={gal.num}\n      id={gal.id}\n      name={gal.name}\n      area={gal.area}\n      address={gal.address}\n      birthday={gal.birthday}\n      family={gal.family}\n      friends={gal.friends}\n      gifts={gal.gifts}\n      image={gal.image}\n      image_two={gal.image_two}\n      showInfo={showInfo}\n    />\n  ));\n\n  return (\n    <div className=\"content\">\n      <Modal\n        open={showModal}\n        onClose={() => {\n          setModalOpen(false);\n        }}\n      >\n        <div className=\"infoBox\">\n          <div className=\"infoBox_left\">\n            <div className=\"column1\">\n              <p className=\"modal_info\">\n                Birthday:{\" \"}\n                <span className=\"modal_info_2\">{selectedChar.birthday}</span>\n              </p>\n              <p className=\"modal_info\">\n                Area: <span className=\"modal_info_2\">{selectedChar.area}</span>\n              </p>\n              <p className=\"modal_info\">\n                Address:{\" \"}\n                <span className=\"modal_info_2\">{selectedChar.address}</span>\n              </p>\n              <p className=\"modal_info\">\n                Family: <span className=\"modal_info_2\">{family}</span>\n              </p>\n            </div>\n\n            <div className=\"column2\">\n              <p className=\"modal_info\">\n                Friends: <span className=\"modal_info_2\">{friends}</span>\n              </p>\n              <p className=\"modal_info\">\n                Gifts that {selectedChar.name} loves:{\" \"}\n                <span className=\"modal_info_2\">{giftLove}</span>\n              </p>\n              <p className=\"modal_info\">\n                Gifts that {selectedChar.name} hates:{\" \"}\n                <span className=\"modal_info_2\">{giftHate}</span>\n              </p>\n            </div>\n          </div>\n\n          <div className=\"infoBox_right\">\n            <img src={selectedChar.image_two}></img>\n            <h1>{selectedChar.name}</h1>\n          </div>\n        </div>\n      </Modal>\n\n      <Carousel\n        renderArrow={myArrow}\n        className=\"carousel\"\n        itemsToShow={cardNum}\n        renderPagination={({ pages, activePage, onClick }) => {\n          return (\n            <div direction=\"row\">\n              {pages.map((page) => {\n                const isActivePage = activePage === page;\n                return (\n                  <input\n                    key={page}\n                    type=\"radio\"\n                    name=\"radio\"\n                    value={page}\n                    onClick={() => onClick(page)}\n                    active={isActivePage}\n                    checked={isActivePage}\n                  />\n                );\n              })}\n            </div>\n          );\n        }}\n      >\n        <div>{gals[0]}</div>\n        <div>{gals[1]}</div>\n        <div>{gals[2]}</div>\n        <div>{gals[3]}</div>\n        <div>{gals[4]}</div>\n        <div>{gals[5]}</div>\n      </Carousel>\n\n      <br />\n      <br />\n\n      <Carousel\n        renderArrow={myArrow}\n        className=\"carousel\"\n        itemsToShow={cardNum}\n        renderPagination={({ pages, activePage, onClick }) => {\n          return (\n            <div direction=\"row\">\n              {pages.map((page) => {\n                const isActivePage = activePage === page;\n                return (\n                  <input\n                    key={page}\n                    type=\"radio\"\n                    name=\"radio_set2\"\n                    value={page}\n                    onClick={() => onClick(page)}\n                    active={isActivePage}\n                    checked={isActivePage}\n                  />\n                );\n              })}\n            </div>\n          );\n        }}\n      >\n        <div>{guys[0]}</div>\n        <div>{guys[1]}</div>\n        <div>{guys[2]}</div>\n        <div>{guys[3]}</div>\n        <div>{guys[4]}</div>\n        <div>{guys[5]}</div>\n      </Carousel>\n\n      <img\n        className=\"back_button\"\n        src={process.env.PUBLIC_URL + \"/data/img/back.png\"}\n        onClick={back}\n      />\n    </div>\n  );\n\n  function changeCarousel() {\n    if (window.innerWidth > 1050) {\n      console.log(\"Hello\");\n      setCardNum(3);\n    }\n\n    if (window.innerWidth < 1050) {\n      setCardNum(2);\n    }\n\n    if (window.innerWidth < 750) {\n      setCardNum(1);\n    }\n  }\n\n  function showInfo(charID, charKey) {\n    // if the selected character ID is greater than 5, select the bachelors. If the selected character ID is less than 6, select the bachelorettes.\n\n    // Bachelorettes\n    if (charID < 6) {\n      selectChar(chars[0].Bachelorettes[charKey]);\n      setFriends(chars[0].Bachelorettes[charKey].friends.join(\", \"));\n      setFamily(chars[0].Bachelorettes[charKey].family.join(\", \"));\n      setGiftLove(chars[0].Bachelorettes[charKey].gifts.love.join(\", \"));\n      setGiftHate(chars[0].Bachelorettes[charKey].gifts.hate.join(\", \"));\n    }\n\n    // Bachelors\n    if (charID > 5) {\n      selectChar(chars[1].Bachelors[charKey]);\n      setFriends(chars[1].Bachelors[charKey].friends.join(\" \"));\n      setFamily(chars[1].Bachelors[charKey].family.join(\" \"));\n      setGiftLove(chars[1].Bachelors[charKey].gifts.love.join(\", \"));\n      setGiftHate(chars[1].Bachelors[charKey].gifts.hate.join(\", \"));\n    }\n\n    setModalOpen(true);\n  }\n\n  function myArrow({ type, onClick, isEdge }) {\n    const pointer =\n      type === consts.PREV ? (\n        <ArrowBackIosNewIcon className=\"arrow\" />\n      ) : (\n        <ArrowForwardIosIcon className=\"arrow\" />\n      );\n    return (\n      <span className=\"arrow_box\" onClick={onClick} disabled={isEdge}>\n        {pointer}\n      </span>\n    );\n  }\n}\n","// This file will hold three buttons, which have on clicks that let you decide if you want to view Bachelors, Bachelorettes, or Both. This can be done using if statements\n\n// Animate buttons and carousels in and out. Also maybe a back button??\n\n// This function will be what is in App.js\n\nimport { useState } from \"react\";\nimport Button from \"@mui/material/Button\";\n\nexport default function Menu({ bachelors, bachelorettes, viewAll }) {\n  const [buttonWidth, setButtonWidth] = useState(\"30%\");\n\n  window.addEventListener(\"load\", changeButtonWidth);\n  window.addEventListener(\"resize\", changeButtonWidth);\n\n  return (\n    <div className=\"content\">\n      <div className=\"menu\">\n        <img\n          className=\"menu_button\"\n          src={process.env.PUBLIC_URL + \"/data/img/guys.png\"}\n          onClick={bachelors}\n        />\n        <img\n          className=\"menu_button\"\n          src={process.env.PUBLIC_URL + \"/data/img/gals.png\"}\n          onClick={bachelorettes}\n        />\n        <img\n          className=\"menu_button\"\n          src={process.env.PUBLIC_URL + \"/data/img/viewAll.png\"}\n          onClick={viewAll}\n        />\n      </div>\n    </div>\n  );\n\n  function changeButtonWidth() {\n    if (window.innerWidth > 1200) {\n      setButtonWidth(\"30%\");\n    }\n\n    if (window.innerWidth < 1200) {\n      setButtonWidth(\"50%\");\n    }\n  }\n}\n","// This file will hold three buttons, which have on clicks that let you decide if you want to view Bachelors, Bachelorettes, or Both. This can be done using if statements\n\n// Animate buttons and carousels in and out. Also maybe a back button??\n\n// This function will be what is in App.js\n\nimport React, { useState } from \"react\";\nimport Bachelors from \"../characters/Bachelors\";\nimport Bachelorettes from \"../characters/Bachelorettes\";\nimport ViewAll from \"../characters/ViewAll\";\nimport Menu from \"./Menu\";\n\nexport default function SelectView() {\n  const [view, setView] = useState(\n    <Menu\n      bachelors={setBachelors}\n      bachelorettes={setBachelorettes}\n      viewAll={setViewAll}\n    />\n  );\n\n  return <div className=\"content\">{view}</div>;\n\n  function setBachelors() {\n    setView(<Bachelors back={setMenu} />);\n  }\n\n  function setBachelorettes() {\n    setView(<Bachelorettes back={setMenu} />);\n  }\n\n  function setViewAll() {\n    setView(<ViewAll back={setMenu} />);\n  }\n\n  function setMenu() {\n    setView(\n      <Menu\n        bachelors={setBachelors}\n        bachelorettes={setBachelorettes}\n        viewAll={setViewAll}\n      />\n    );\n  }\n}\n","import \"./styles.css\";\nimport React from \"react\";\nimport SelectView from \"./components/SelectView\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        <img\n          className=\"main_logo\"\n          src={process.env.PUBLIC_URL + \"/data/img/main_logo.png\"}\n        />\n      </div>\n      <React.StrictMode>\n        <SelectView />\n      </React.StrictMode>\n    </div>\n  );\n}\n\n// TO DO LIST\n\n// Animations for the view transitions (translateX)\n\n// Deployment\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}